//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace FTN {
    using System;
    using FTN;
    
    
    /// Triplet of resistance, reactance, and susceptance matrix element values.
    public class PhaseImpedanceData : IdentifiedObject {
        
        /// Susceptance matrix element value, per length of unit.
        private System.Single? cim_b;
        
        private const bool isBMandatory = false;
        
        private const string _bPrefix = "cim";
        
        /// Conductor phase impedance to which this data belongs.
        private PerLengthPhaseImpedance cim_PhaseImpedance;
        
        private const bool isPhaseImpedanceMandatory = true;
        
        private const string _PhaseImpedancePrefix = "cim";
        
        /// Resistance matrix element value, per length of unit.
        private System.Single? cim_r;
        
        private const bool isRMandatory = false;
        
        private const string _rPrefix = "cim";
        
        /// Column-wise element index, assuming a symmetrical matrix. Ranges from 1 to N + N*(N-1)/2.
        private System.Int32? cim_sequenceNumber;
        
        private const bool isSequenceNumberMandatory = false;
        
        private const string _sequenceNumberPrefix = "cim";
        
        /// Reactance matrix element value, per length of unit.
        private System.Single? cim_x;
        
        private const bool isXMandatory = false;
        
        private const string _xPrefix = "cim";
        
        public virtual float B {
            get {
                return this.cim_b.GetValueOrDefault();
            }
            set {
                this.cim_b = value;
            }
        }
        
        public virtual bool BHasValue {
            get {
                return this.cim_b != null;
            }
        }
        
        public static bool IsBMandatory {
            get {
                return isBMandatory;
            }
        }
        
        public static string BPrefix {
            get {
                return _bPrefix;
            }
        }
        
        public virtual PerLengthPhaseImpedance PhaseImpedance {
            get {
                return this.cim_PhaseImpedance;
            }
            set {
                this.cim_PhaseImpedance = value;
            }
        }
        
        public virtual bool PhaseImpedanceHasValue {
            get {
                return this.cim_PhaseImpedance != null;
            }
        }
        
        public static bool IsPhaseImpedanceMandatory {
            get {
                return isPhaseImpedanceMandatory;
            }
        }
        
        public static string PhaseImpedancePrefix {
            get {
                return _PhaseImpedancePrefix;
            }
        }
        
        public virtual float R {
            get {
                return this.cim_r.GetValueOrDefault();
            }
            set {
                this.cim_r = value;
            }
        }
        
        public virtual bool RHasValue {
            get {
                return this.cim_r != null;
            }
        }
        
        public static bool IsRMandatory {
            get {
                return isRMandatory;
            }
        }
        
        public static string RPrefix {
            get {
                return _rPrefix;
            }
        }
        
        public virtual int SequenceNumber {
            get {
                return this.cim_sequenceNumber.GetValueOrDefault();
            }
            set {
                this.cim_sequenceNumber = value;
            }
        }
        
        public virtual bool SequenceNumberHasValue {
            get {
                return this.cim_sequenceNumber != null;
            }
        }
        
        public static bool IsSequenceNumberMandatory {
            get {
                return isSequenceNumberMandatory;
            }
        }
        
        public static string SequenceNumberPrefix {
            get {
                return _sequenceNumberPrefix;
            }
        }
        
        public virtual float X {
            get {
                return this.cim_x.GetValueOrDefault();
            }
            set {
                this.cim_x = value;
            }
        }
        
        public virtual bool XHasValue {
            get {
                return this.cim_x != null;
            }
        }
        
        public static bool IsXMandatory {
            get {
                return isXMandatory;
            }
        }
        
        public static string XPrefix {
            get {
                return _xPrefix;
            }
        }
    }
}
